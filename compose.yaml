services:
  mysql:
    container_name: "bd-pkm"
    image: mysql:latest
    #network_mode: "host" ##para criar o container com o mesmo IP
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: 123@123
      MYSQL_DATABASE: padrao
      MYSQL_USER: pokemon
      MYSQL_PASSWORD: 123@123
    #volumes:
      #- ./vol_bd:/var/lib/mysql
      # Mapeamento do tipo BIND MOUNT
      #- /home/docker/app/docvolumes/vol_bd:/var/lib/mysql
      # com volume tipo VOLUME
      # - vol_bd_new:/var/lib/mysql
    # networks:
    #   - devops
    #deploy:
    #  resources:
    #    limits:
          #cpus: "0.5"
          #memory: 250M

  api-pokemon:
    container_name: api-pokemon
    ports:
      - "8689:8689"
    build:
      context: .
      dockerfile: dockerfile
    #extra_hosts:
    #  bd-pkm: 172.19.0.5
    # networks:
    #   - exist
    depends_on:
      - mysql

  api-monmetrics:
    container_name: api-monmetrics
    ports:
      - "5000:5000"
    build:
      context: .
      dockerfile: dockerobs
    depends_on:
      - api-pokemon

#Caso queira utilizar um volume do tipo VOLUME
#volumes:
#  vol_bd_new:
#  name: bd_volume_mysql
#  external: true #caso queria usar um volume criado anteriormente

# networks:
#   devops_rede:
#     driver: bridge
#     name: devops_rede
  prometheus:
    image: prom/prometheus
    user: root
    container_name: "prometheus"
    hostname: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus:/etc/prometheus
      - ./prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    ports:
      - 9090:9090

  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_PATHS_PROVISIONING: /etc/grafana/provisioning
      DS_PROMETHEUS: prometheus
    
    volumes: 
      - "./datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml"
      - "./dashboard.json:/var/lib/grafana/dashboards/dashboard.json"
      - "./default.yaml:/etc/grafana/provisioning/dashboards/default.yaml"
      
  jaegger:
    container_name: jaeger
    image: jaegertracing/all-in-one
    ports:
    - "5775:5775/udp"
    - "6831:6831/udp"
    - "6832:6832/udp"
    - "16686:16686"
    - "14268:14268"
    - "9411:9411" 
    
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
    - 8080:8080
    volumes:
    - /:/rootfs:ro
    - /var/run:/var/run:rw
    - /sys:/sys:ro
    - /var/lib/docker/:/var/lib/docker:ro
    depends_on:
    - api-monmetrics
    - api-pokemon
    - jaegger
    - grafana
    - mysql
    - prometheus
